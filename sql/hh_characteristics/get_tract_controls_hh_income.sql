/*
Get census tract controls for households by household income category. Census tracts
without a distribution default to using the regional

Controls are generated by the 5-year ACS Detailed Tables
    B19001 - Household Income in the Past 12 Months

Two input parameters are used
    run_id - the run identifier is used to get the list of census tracts in tandem with
        the year parameter that determines their vintage
    year - the year parameter is used to identify the 5-year ACS Detailed Tables release
        to use (ex. 2023 maps to 2019-2023) and the census tract geography vintage
        (2010-2019 uses 2010, 2020-2029 uses 2020)
*/

SET NOCOUNT ON;
-- Initialize parameters ---------------------------------------------------------------
DECLARE @run_id integer = :run_id;
DECLARE @year integer = :year;
DECLARE @msg nvarchar(45) = 'ACS 5-Year Table does not exist';

-- Send error message if no data exists ------------------------------------------------
IF NOT EXISTS (
    SELECT TOP (1) *
    FROM [acs].[detailed].[tables]
    WHERE 
        [name] = 'B19001'
        AND [year] = @year
        AND [product] = '5Y'
)
SELECT @msg AS [msg]
ELSE
BEGIN

    -- Build the expected return table Tract x Structure Type --------------------------
    DROP TABLE IF EXISTS [#tt_shell];
    SELECT 
        [tract],
        [income_category]
    INTO [#tt_shell]
    FROM (
        SELECT DISTINCT
            CASE WHEN @year BETWEEN 2010 AND 2019 THEN [2010_census_tract]
                WHEN @year BETWEEN 2020 AND 2029 THEN [2020_census_tract]
                ELSE NULL END AS [tract]
        FROM [inputs].[mgra]
        WHERE [run_id] = @run_id
    ) AS [tracts]
    CROSS JOIN (
        SELECT [income_category] FROM (
            VALUES
                ('Less than $15,000'),
                ('$15,000 to $29,999'),
                ('$30,000 to $44,999'),
                ('$45,000 to $59,999'),
                ('$60,000 to $74,999'),
                ('$75,000 to $99,999'),
                ('$100,000 to $124,999'),
                ('$125,000 to $149,999'),
                ('$150,000 to $199,999'),
                ('$200,000 or more')
        ) AS [tt] ([income_category])
    ) AS [income_category];


    -- Prepare intermediary results from ACS datasets ----------------------------------
    -- 5-year ACS Detailed Table B19001 - Household Income in the Past 12 Months
    DROP TABLE IF EXISTS [#income_category];
    SELECT
        [tract],
        [income_category],
        SUM([value]) AS [hh]
    INTO [#income_category]
    FROM (
        SELECT
            [tract],
            -- REPLACE is used here since between 2018 and 2019, the [label] format
            -- changed slightly. In 2018, there was no ':', but starting in 2019, a ':'
            -- was added. We remove the ':' so that all string matching is done to the
            -- same string
            CASE
                WHEN REPLACE([label], ':', '') IN (
                    'Estimate!!Total!!Less than $10,000',
                    'Estimate!!Total!!$10,000 to $14,999')
                    THEN 'Less than $15,000'
                WHEN REPLACE([label], ':', '') IN (
                    'Estimate!!Total!!$15,000 to $19,999',
                    'Estimate!!Total!!$20,000 to $24,999',
                    'Estimate!!Total!!$25,000 to $29,999')
                    THEN '$15,000 to $29,999'
                WHEN REPLACE([label], ':', '') IN (
                    'Estimate!!Total!!$30,000 to $34,999',
                    'Estimate!!Total!!$35,000 to $39,999',
                    'Estimate!!Total!!$40,000 to $44,999')
                    THEN '$30,000 to $44,999'
                WHEN REPLACE([label], ':', '') IN (
                    'Estimate!!Total!!$45,000 to $49,999',
                    'Estimate!!Total!!$50,000 to $59,999')
                    THEN '$45,000 to $59,999'
                WHEN REPLACE([label], ':', '') = 'Estimate!!Total!!$60,000 to $74,999'
                    THEN '$60,000 to $74,999'
                WHEN REPLACE([label], ':', '') = 'Estimate!!Total!!$75,000 to $99,999'
                    THEN '$75,000 to $99,999'
                WHEN REPLACE([label], ':', '') = 'Estimate!!Total!!$100,000 to $124,999'
                    THEN '$100,000 to $124,999'
                WHEN REPLACE([label], ':', '') = 'Estimate!!Total!!$125,000 to $149,999'
                    THEN '$125,000 to $149,999'
                WHEN REPLACE([label], ':', '') = 'Estimate!!Total!!$150,000 to $199,999'
                    THEN '$150,000 to $199,999'
                WHEN REPLACE([label], ':', '') = 'Estimate!!Total!!$200,000 or more'
                    THEN '$200,000 or more'
                ELSE NULL  -- NULL values for Margin of Error fields removed in subsequent WHERE clause
            END AS [income_category],
            [value]
        FROM [acs].[detailed].[values]
        LEFT JOIN [acs].[detailed].[geography]
            ON [values].[geography_id] = [geography].[geography_id]
        LEFT JOIN [acs].[detailed].[variables]
            ON [values].[variable] = [variables].[variable]
            AND [values].[table_id] = [variables].[table_id]
        LEFT JOIN [acs].[detailed].[tables]
            ON [values].[table_id] = [tables].[table_id]
        WHERE
            [tables].[name] = 'B19001'
            AND [tables].[year] = @year
            AND [tables].[product] = '5Y'
    ) AS [b19001]
    WHERE [income_category] IS NOT NULL
    GROUP BY
        [tract],
        [income_category]

    -- Create hh income distribution ---------------------------------------------------
    -- Calculate hh income distribution
    DECLARE @total_hh INTEGER = (SELECT SUM([hh]) FROM [#income_category]);
    WITH [region_income_distribution] AS (
            SELECT
                [income_category],
                1.0 * SUM([hh]) / @total_hh AS [hh_dist]
            FROM [#income_category]
            GROUP BY [income_category]
        ),
        -- Calculate census tract occupancy rates by structure type
        [income_distribution] AS (
            SELECT
                [#income_category].[tract],
                [income_category],
                CASE 
                    WHEN [tract_total_hh].[hh] = 0 THEN NULL
                    ELSE [#income_category].[hh] / [tract_total_hh].[hh] 
                END AS [hh_dist]
            FROM [#income_category]
            LEFT JOIN (
                    SELECT
                        [tract],
                        SUM([hh]) AS [hh]
                    FROM [#income_category]
                    GROUP BY [tract]
                ) AS [tract_total_hh]
                ON [#income_category].[tract] = [tract_total_hh].[tract]
        )
    SELECT
        @run_id AS [run_id],
        @year AS [year],
        [#tt_shell].[tract],
        [#tt_shell].[income_category],
        ISNULL([income_distribution].[hh_dist], [region_income_distribution].[hh_dist]) AS [value]
    FROM [#tt_shell]
    LEFT JOIN [region_income_distribution]
        ON [#tt_shell].[income_category] = [region_income_distribution].[income_category]
    LEFT JOIN [income_distribution]
        ON [#tt_shell].[tract] = [income_distribution].[tract]
        AND [#tt_shell].[income_category] = [income_distribution].[income_category]

END